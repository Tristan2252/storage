---
 - name: install gluster
   yum:
           name: "{{ item }}"
           state: latest
   with_items:
           - centos-release-gluster5
           - glusterfs 
           - glusterfs-server

 - name: enable gluster  
   systemd:
           name: glusterd
           state: started
           enabled: True

 - name: setup firewall
   command: '{{ item }}'
   register: firewall_status
   with_items:
           - firewall-cmd --zone=trusted --add-service=glusterfs --permanent
           - firewall-cmd --zone=trusted --add-source=############# --permanent 
           - firewall-cmd --zone=trusted --add-source=############# --permanent
             #TODO: figure out what ports need to be opened for clients vvvvvvv
             #- firewall-cmd --zone=trusted --add-source=############# --permanent 
           - firewall-cmd --reload
   changed_when: "'Warning: ALREADY_ENABLED:' not in firewall_status.stderr"

   # - name: setup hosts file
   #   lineinfile: 
   #           dest: /etc/hosts 
   #           regexp: '.*{{ item }}$' 
   #           line: "{{ item }}" 
   #           state: present
   #   with_items:
   #           - '############# atreides atreides.cs.nmt.edu'
   #           - '############# harkonnen harkonnen.cs.nmt.edu'

 
 - name: setup brick directory
   file:
           path: /srv/brick/userhomes
           state: directory
           owner: root

 - name: check if gluster volume already exists
   command: gluster volume info
   changed_when: false
   register: gluster_volume_info

 - name: gluster peer probe
   command: gluster peer probe '{{ item }}'
   register: gluster_peer_probe
   changed_when: "'already in peer list' not in gluster_peer_probe.stdout"
   failed_when: false
   with_items: groups.storage
   when: "'Volume Name: userhomes' not in gluster_volume_info.stdout"

 - name: Create gluster volume
   command: gluster volume create userhomes replica 2 atreides.cs.nmt.edu:/srv/brick/userhomes harkonnen.cs.nmt.edu:/srv/brick/userhomes force
   register: gluster_volume_create
   changed_when: "'successful' in gluster_volume_create.stdout"
   when: "inventory_hostname == groups.storage[0] and 'Volume Name: userhomes' not in gluster_volume_info.stdout"

 - name: Check gluster volume status
   command: gluster volume status
   register: gluster_status
   when: "inventory_hostname == groups.storage[0]"
   changed_when: "'Volume userhomes is not started' in gluster_status.stdout"

 - name: Ensure gluster volume is started
   command: gluster volume start userhomes
   register: gluster_volume_start
   changed_when: "'successful' in gluster_volume_start.stdout"
   when: "inventory_hostname == groups.storage[0] and 'Volume userhomes is not started' in gluster_status.stderr"

 - name: Ensure gluster volume mounted
   mount:
        name: /mnt/
        src: "{{ groups.storage[0] }}:/userhomes"
        fstype: glusterfs
        opts: "defaults, _netdev"
        state: mounted
           
